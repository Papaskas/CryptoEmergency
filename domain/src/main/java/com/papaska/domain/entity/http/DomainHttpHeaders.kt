package com.papaska.domain.entity.http

enum class DomainHttpHeaders(
    val headerName: String,
) {
    ACCEPT("Accept"),
    ACCEPT_CHARSET("Accept-Charset"),
    ACCEPT_ENCODING("Accept-Encoding"),
    ACCEPT_LANGUAGE("Accept-Language"),
    ACCEPT_RANGES("Accept-Ranges"),
    AGE("Age"),
    ALLOW("Allow"),

    // Application-Layer Protocol Negotiation, HTTP/2
    ALPN("ALPN"),
    AUTHENTICATION_INFO("Authentication-Info"),
    AUTHORIZATION("Authorization"),
    CACHE_CONTROL("Cache-Control"),
    CONNECTION("Connection"),
    CONTENT_DISPOSITION("Content-Disposition"),
    CONTENT_ENCODING("Content-Encoding"),
    CONTENT_LANGUAGE("Content-Language"),
    CONTENT_LENGTH("Content-Length"),
    CONTENT_LOCATION("Content-Location"),
    CONTENT_RANGE("Content-Range"),
    CONTENT_TYPE("Content-Type"),
    COOKIE("Cookie"),

    // WebDAV Search
    DASL("DASL"),
    DATE("Date"),

    // WebDAV
    DAV("DAV"),
    DEPTH("Depth"),
    DESTINATION("Destination"),
    ETAG("ETag"),
    EXPECT("Expect"),
    EXPIRES("Expires"),
    FROM("From"),
    FORWARDED("Forwarded"),
    HOST("Host"),
    HTTP2_SETTINGS("HTTP2-Settings"),
    IF("If"),
    IF_MATCH("If-Match"),
    IF_MODIFIED_SINCE("If-Modified-Since"),
    IF_NONE_MATCH("If-None-Match"),
    IF_RANGE("If-Range"),
    IF_SCHEDULE_TAG_MATCH("If-Schedule-Tag-Match"),
    IF_UNMODIFIED_SINCE("If-Unmodified-Since"),
    LAST_MODIFIED("Last-Modified"),
    LOCATION("Location"),
    LOCK_TOKEN("Lock-Token"),
    LINK("Link"),
    MAX_FORWARDS("Max-Forwards"),
    MIME_VERSION("MIME-Version"),
    ORDERING_TYPE("Ordering-Type"),
    ORIGIN("Origin"),
    OVERWRITE("Overwrite"),
    POSITION("Position"),
    PRAGMA("Pragma"),
    PREFER("Prefer"),
    PREFERENCE_APPLIED("Preference-Applied"),
    PROXY_AUTHENTICATE("Proxy-Authenticate"),
    PROXY_AUTHENTICATION_INFO("Proxy-Authentication-Info"),
    PROXY_AUTHORIZATION("Proxy-Authorization"),
    PUBLIC_KEY_PINS("Public-Key-Pins"),
    PUBLIC_KEY_PINS_REPORT_ONLY("Public-Key-Pins-Report-Only"),
    RANGE("Range"),
    REFERRER("Referer"),
    RETRY_AFTER("Retry-After"),
    SCHEDULE_REPLY("Schedule-Reply"),
    SCHEDULE_TAG("Schedule-Tag"),
    SEC_WEBSOCKET_ACCEPT("Sec-WebSocket-Accept"),
    SEC_WEBSOCKET_EXTENSIONS("Sec-WebSocket-Extensions"),
    SEC_WEBSOCKET_KEY("Sec-WebSocket-Key"),
    SEC_WEBSOCKET_PROTOCOL("Sec-WebSocket-Protocol"),
    SEC_WEBSOCKET_VERSION("Sec-WebSocket-Version"),
    SERVER("Server"),
    SET_COOKIE("Set-Cookie"),

    // Atom Publishing
    SLUG("SLUG"),
    STRICT_TRANSPORT_SECURITY("Strict-Transport-Security"),
    TE("TE"),
    TIMEOUT("Timeout"),
    TRAILER("Trailer"),
    TRANSFER_ENCODING("Transfer-Encoding"),
    UPGRADE("Upgrade"),
    USER_AGENT("User-Agent"),
    VARY("Vary"),
    VIA("Via"),
    WARNING("Warning"),
    WWW_AUTHENTICATE("WWW-Authenticate"),

    // CORS
    ACCESS_CONTROL_ALLOW_ORIGIN("Access-Control-Allow-Origin"),
    ACCESS_CONTROL_ALLOW_METHODS("Access-Control-Allow-Methods"),
    ACCESS_CONTROL_ALLOW_CREDENTIALS("Access-Control-Allow-Credentials"),
    ACCESS_CONTROL_ALLOW_HEADERS("Access-Control-Allow-Headers"),

    ACCESS_CONTROL_REQUEST_METHOD("Access-Control-Request-Method"),
    ACCESS_CONTROL_REQUEST_HEADERS("Access-Control-Request-Headers"),
    ACCESS_CONTROL_EXPOSE_HEADERS("Access-Control-Expose-Headers"),
    ACCESS_CONTROL_MAX_AGE("Access-Control-Max-Age"),

    // Unofficial de-facto headers
    X_HTTP_METHOD_OVERRIDE("X-Http-Method-Override"),
    X_FORWARDED_HOST("X-Forwarded-Host"),
    X_FORWARDED_SERVER("X-Forwarded-Server"),
    X_FORWARDED_PROTO("X-Forwarded-Proto"),
    X_FORWARDED_FOR("X-Forwarded-For"),

    X_FORWARDED_PORT("X-Forwarded-Port"),

    X_REQUEST_ID("X-Request-ID"),
    X_CORRELATION_ID("X-Correlation-ID"),
    X_TOTAL_COUNT("X-Total-Count"),
}
